services:
  web:
    extends:
      file: compose.base.yaml
      service: web
    volumes:  
      # The global config
      - ./config_dev.py:/main/config.py
    
      # The logging directory
      - ./logs_dev/:/main/logs_dev/

      # The media root
      - ./media_dev/:/main/media_dev/

      # The redis unix socket directory
      - redis_sock_dir_dev:/var/run/redis/

      # The code files and directories; this is more
      # efficient for development, as there would be
      # no need to build the images again.
      - ./gamespecs/:/main/gamespecs/
      - ./fights/:/main/fights/
      - ./accounts/:/main/accounts/
      - ./pages/:/main/pages/
      - ./common/:/main/common/
      - ./utils/:/main/utils/
      - ./django_project/:/main/django_project/
      - ./games/:/main/games/
      - ./templates/:/main/templates/
      - ./manage.py:/main/manage.py

      # For development, let django serve the static files.
      - ./static/:/main/static/
    # Only for development.
    entrypoint: python3 manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    environment:
      # ONLY for development.
      DJANGO_SECRET_KEY: 'django-insecure-@t1x_j+=5)=9n%67!3w4c@^&06k4i_7eo_av)ua0)r2)@n1xp2'
      POSTGRES_PASSWORD: postgres
      EMAIL_HOST_PASSWORD: testpassword123


  # For WebSockets. Later ...
  # async_web:
  #   ...
  

  redis:
    extends:
      file: compose.base.yaml
      service: redis
    volumes:
      - ./logs_dev/redis/:/var/log/redis/
      - redis_sock_dir_dev:/var/run/redis/


  db:
    extends:
      file: compose.base.yaml
      service: db
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    
    environment:
      # ONLY for development. These are for the initial DB superuser.
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
 

  simulator:
    extends:
      file: compose.base.yaml
      service: simulator
    volumes:
      # The global confignormal
      - ./config_dev.py:/main/config.py

      # # The logging directory
      - ./logs_dev/:/main/logs_dev/

      # The media root
      - ./media_dev/:/main/media_dev/

      # The redis unix socket directory
      - redis_sock_dir_dev:/var/run/redis/

      # The code files and directories; this is more
      # efficient for development, as there would be
      # no need to build the images again.
      #
      # NOTE: If you make a change in the C extensions,
      # you MUST rebuild the image, as it will have to
      # recompile it. Also, currently, if any changes are
      # made to the coderunner, its image MUST be rebuilt.
      - ./simulator/entry.py:/main/simulator/entry.py
      - ./simulator/daemon.py:/main/simulator/daemon.py
      - ./simulator/settings.py:/main/simulator/settings.py
      - ./common/:/main/common/
      - ./games/:/main/games/

  
  result_processor:
    extends:
      file: compose.base.yaml
      service: result_processor
    volumes:
      # The global config
      - ./config_dev.py:/main/config.py
    
      # The logging directory
      - ./logs_dev/:/main/logs_dev/

      # The redis unix socket directory
      - redis_sock_dir_dev:/var/run/redis/

      # The code files and directories; this is more
      # efficient for development, as there would be
      # no need to build the images again.
      - ./gamespecs/:/main/gamespecs/
      - ./fights/:/main/fights/
      - ./accounts/:/main/accounts/
      - ./pages/:/main/pages/
      - ./common/:/main/common/
      - ./utils/:/main/utils/
      - ./django_project/:/main/django_project/
      - ./games/:/main/games/
      - ./templates/:/main/templates/
      - ./manage.py:/main/manage.py
      - ./result_processor/:/main/result_processor/
    environment:
      # ONLY for development.
      POSTGRES_PASSWORD: postgres


volumes:
  # tmpfs volumes cannot be shared between containers,
  # so we use a normal docker volume.
  redis_sock_dir_dev:

  postgres_data_dev:
    external: true
